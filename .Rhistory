#### merge racebase haul and catch
# load haul table (this one is with only "ABUNDANCE HAUL = "Y" downloaded from SQL developer)
# haul<-read.csv("c:/sa/race_base_haul.csv",header=T)
haul<-read.csv("race_base_haul.csv",header=T)
# load total racebase catch all cruises and species
# catch<-read.csv("c:/sa/racebase_catch.csv",header=T)
catch<-read.csv("racebase_catch.csv",header=T)
catchhaul<-merge(catch,haul,all.y=T,all.x=F,by.x="HAULJOIN",by.y="HAULJOIN")
catchhaul$effort<-catchhaul$NET_WIDTH*catchhaul$DISTANCE_FISHED/1000
catchhaul$cpue<-catchhaul$WEIGHT/catchhaul$effort
hauls <- unique(catchhaul$HAULJOIN)
n.hauls <- length(hauls)
require(FishData)
#Temporary species code
temp.code <- 30420
n.obs.pre <- nrow(catchhaul[catchhaul$SPECIES_CODE==temp.code,])
#Add in missing zeros
start <- date()
catchhaul.2 <- add_missing_zeros(data_frame=catchhaul, unique_sample_ID_colname='HAULJOIN',
sample_colname='WEIGHT', species_colname='SPECIES_CODE',
species_subset=temp.code,
if_multiple_records='First',
Method='Fast')
end <- date()
setwd("~/Projects/VAST Evaluation/AFSC_VAST_Evaluation")
setwd("~/Projects/VAST Evaluation/New Stuff 3.27.17")
#### merge racebase haul and catch
# load haul table (this one is with only "ABUNDANCE HAUL = "Y" downloaded from SQL developer)
# haul<-read.csv("c:/sa/race_base_haul.csv",header=T)
haul<-read.csv("race_base_haul.csv",header=T)
# load total racebase catch all cruises and species
# catch<-read.csv("c:/sa/racebase_catch.csv",header=T)
catch<-read.csv("racebase_catch.csv",header=T)
catchhaul<-merge(catch,haul,all.y=T,all.x=F,by.x="HAULJOIN",by.y="HAULJOIN")
catchhaul$effort<-catchhaul$NET_WIDTH*catchhaul$DISTANCE_FISHED/1000
catchhaul$cpue<-catchhaul$WEIGHT/catchhaul$effort
hauls <- unique(catchhaul$HAULJOIN)
n.hauls <- length(hauls)
require(FishData)
#Temporary species code
temp.code <- 30420
n.obs.pre <- nrow(catchhaul[catchhaul$SPECIES_CODE==temp.code,])
#Add in missing zeros
start <- date()
catchhaul.2 <- add_missing_zeros(data_frame=catchhaul, unique_sample_ID_colname='HAULJOIN',
sample_colname='WEIGHT', species_colname='SPECIES_CODE',
species_subset=temp.code,
if_multiple_records='First',
Method='Fast')
end <- date()
#Temporary species code
temp.code <- c(30152,30420)
n.obs.pre <- nrow(catchhaul[catchhaul$SPECIES_CODE==temp.code,])
#Add in missing zeros
start <- date()
catchhaul.2 <- add_missing_zeros(data_frame=catchhaul, unique_sample_ID_colname='HAULJOIN',
sample_colname='WEIGHT', species_colname='SPECIES_CODE',
species_subset=temp.code,
if_multiple_records='First',
Method='Fast')
end <- date()
n.hauls
nrow(catchhaul.2)
head(catchhaul.2)
names(catchhaul.2)
unique(catchhaul$REGION.x)
file.exists('data/race_base_haul.csv')
setwd("~/Projects/VAST Evaluation/AFSC_VAST_Evaluation")
file.exists('data/race_base_haul.csv')
?STOP
?stop
?warning
?stop
if(file.exists('data/rcace_base_haul.csv')==FALSE) { stop('### Error: data/race_base_haul.csv NOT FOUND') }
library(FishData)
#Opening section to determine suitability
if(file.exists('data/race_base_haul.csv')==FALSE) { stop('### Error: data/race_base_haul.csv NOT FOUND') }
if(file.exists('data/race_base_catch.csv')==FALSE) { stop('### Error: data/race_base_catch.csv NOT FOUND') }
if(file.exists('data/race_species_codes.csv')==FALSE) { stop('### Error: data/race_species_codes.csv NOT FOUND') }
####TESTING####
species.codes=c(30152,30420)
area='GOA'
###############
library(FishData)
#Opening section to determine suitability
if(file.exists('data/race_base_haul.csv')==FALSE) { stop('### Error: data/race_base_haul.csv NOT FOUND') }
if(file.exists('data/race_base_catch.csv')==FALSE) { stop('### Error: data/race_base_catch.csv NOT FOUND') }
if(file.exists('data/race_species_codes.csv')==FALSE) { stop('### Error: data/race_species_codes.csv NOT FOUND') }
#Load catch and haul data
haul <- read.csv("data/race_base_haul.csv", header=TRUE, stringsAsFactors=FALSE)
catch <- read.csv("data/racebase_catch.csv", header=TRUE, stringsAsFactors=FALSE)
#Merge data
catchhaul <- merge(catch,haul,all.y=T,all.x=F,by.x="HAULJOIN",by.y="HAULJOIN")
ggetwd()
getwd()
getwd(
)
####TESTING####
species.codes=c(30152,30420)
area='GOA'
###############
library(FishData)
#Opening section to determine suitability
if(file.exists('data/race_base_haul.csv')==FALSE) { stop('### Error: data/race_base_haul.csv NOT FOUND') }
if(file.exists('data/race_base_catch.csv')==FALSE) { stop('### Error: data/race_base_catch.csv NOT FOUND') }
if(file.exists('data/race_species_codes.csv')==FALSE) { stop('### Error: data/race_species_codes.csv NOT FOUND') }
#Load catch and haul data
haul <- read.csv("data/race_base_haul.csv", header=TRUE, stringsAsFactors=FALSE)
catch <- read.csv("data/race_base_catch.csv", header=TRUE, stringsAsFactors=FALSE)
#Merge data
catchhaul <- merge(catch,haul,all.y=T,all.x=F,by.x="HAULJOIN",by.y="HAULJOIN")
head(catchhaul)
catchhaul.2 <- add_missing_zeros(data_frame=catchhaul, unique_sample_ID_colname='HAULJOIN',
sample_colname='WEIGHT', species_colname='SPECIES_CODE',
species_subset=species.codes,
if_multiple_records='First',
Method='Fast')
catchhaul.2[catchhaul.2$REGION.x==area,]
catchhaul.3 <- catchhaul.2[catchhaul.2$REGION.x==area,]
catchhaul.3 <- catchhaul.2[catchhaul.2$REGION.x==area,]
catchhaul.2 <- add_missing_zeros(data_frame=catchhaul, unique_sample_ID_colname='HAULJOIN',
sample_colname='WEIGHT', species_colname='SPECIES_CODE',
species_subset=species.codes,
if_multiple_records='First',
Method='Fast')
#Limit to specific area
catchhaul.3 <- catchhaul.2[catchhaul.2$REGION.x==area,]
#Calculate Effort and CPUE
catchhaul.3$effort<-catchhaul.3$NET_WIDTH*catchhaul.3$DISTANCE_FISHED/1000
catchhaul.3$cpue<-catchhaul.3$WEIGHT/catchhaul.3$effort
head(catchhaul.3)
?merge
?merge
?left_join
?require
require(dplyr)
?left_join
species_code_info <- read.csv('data/race_species_codes.csv', header=TRUE, stringsAsFactors=FALSE)
head(species_code_info)
?merge
species.code.data <- read.csv('data/race_species_codes.csv', header=TRUE, stringsAsFactors=FALSE)
names(catchhaul.3)
names(species.code.data)
merge(x=catchhaul.3, y=species.code.data, by.x="SPECIES_CODE", by.y="Species.Code", all.x=TRUE, all.y=FALSE)
head(catchhaul.3)
SPECIES_NAME <- vector(nrow=catchahul.3)
SPECIES_NAME <- vector(length=nrow(catchahul.3))
SPECIES_NAME <- vector(length=nrow(catchhaul.3))
head(species.code.data)
temp <- species.code.data[match(catchhaul.2$SPECIES_CODE, species.code.data$Species.Code), 2]
temp
catchhaul.3$SPECIES_NAME <- species.code.data[match(catchhaul.2$SPECIES_CODE, species.code.data$Species.Code), 2]
?match
length(match(catchhaul.2$SPECIES_CODE, species.code.data$Species.Code))
names(species.code.data)
head(species.code.data)
names(catchhaul.3)
which(catchhaul.3$SPECIES_CODE %in% species.code.data$Species.Code)
which(species.code.data$Species.Code %in% catchhaul.3$SPECIES_CODE)
temp <- species.code.data$Common.Name[which(species.code.data$Species.Code %in% catchhaul.3$SPECIES_CODE)]
temp
?merge
names(species.code.data)
temp <- merge(x=catchhaul.3, y=species.code.data[,c("Species.Code","Common.Name")], by.x='SPECIES_CODE', by.y='Species.Code')
dim(temp)
dim(catchhaul.3)
head(catchhaul.3)
head(temp)
tail(temp)
unique(catchhaul.3$SPECIES_CODE)
catchhaul.3[catchhaul.3$SPECIES_CODE=='NA',]
output <- merge(x=catchhaul.3, y=species.code.data[,c("Species.Code","Common.Name")], by.x='SPECIES_CODE', by.y='Species.Code')
head(output)
write.csv(output, "data/RACE_data_output.csv")
if(writeDATA==TRUE) { save(output, "data/RACE_data_output.RData") }
writeDATA
write.csv(output, "data/RACE_data_output.csv")
write.csv(output, "output/RACE_data_output.csv")
save(output, "output/RACE_data_output.RData")
?save
write.csv(output, file="output/RACE_data_output.csv")
save(output, file="output/RACE_data_output.RData")
?merge
?roxygen
require(roxygen)
install.packages('roxygen')
species.codes <- c(30152,30420)
lat_lon.def <- 'mean'
source("R/load-RACE-data.r")
lat_lon.def %in% c('mean', 'start', 'end')
lat_lon.def <- 'start'
lat_lon.def %in% c('mean', 'start', 'end')
lat_lon.def <- 'rsd'
lat_lon.def %in% c('mean', 'start', 'end')
!lat_lon.def %in% c('mean', 'start', 'end')
#TESTING
species.codes <- c(30152,30420)
lat_lon.def <- 'rsd'
source("R/load-RACE-data.r")
#Check Inputs
if(!lat_lon.def %in% c('mean', 'start', 'end')) { stop('### ERROR: lat_lon.def must be mean, start, or end') }
lat_lon.def <- 'mean'
source("R/load-RACE-data.r")
if(!lat_lon.def %in% c('mean', 'start', 'end')) { stop('lat_lon.def must be mean, start, or end') }
source('//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/VAST Evaluation/AFSC_VAST_Evaluation/R/create-VAST-input.r', echo=TRUE)
#TESTING
species.codes <- c(30152,30420)
lat_lon.def <- "mean"
source("R/load-RACE-data.r")
#Check Inputs
if(!lat_lon.def %in% c("mean", "start", "end")) { stop("lat_lon.def must be mean, start, or end") }
#Get Data
temp.data <- load_RACE_data(species.codes=species.codes, area="GOA")
#TESTING
species.codes <- c(30152,30420)
lat_lon.def <- "mean"
source("R/load-RACE-data.r")
#Check Inputs
if(!lat_lon.def %in% c("mean", "start", "end")) { stop("lat_lon.def must be mean, start, or end") }
#Get Data
temp.data <- load_RACE_data(species.codes=species.codes, area="GOA")
names(temp.data)
load.data <- load_RACE_data(species.codes=species.codes, area="GOA")
Data_Geostat <- NULL
Data_Geostat <- NULL
Data_Geostat$Catch_KG <- temp.data$WEIGHT
head(temp.data)
year(temp.data$START_TIME)
typeof(temp.data$START_TIME)
setwd("~/Projects/VAST Evaluation/AFSC_VAST_Evaluation")
getwd()
require(FishData)
if(file.exists("data/race_base_haul.RData")==FALSE) { stop("data/race_base_haul.RData NOT FOUND") }
if(file.exists("data/race_base_catch.RData")==FALSE) { stop("data/race_base_catch.RData NOT FOUND") }
if(file.exists("data/race_species_codes.csv")==FALSE) { stop("data/race_species_codes.csv NOT FOUND") }
haul <- read.csv("data/race_base_haul.csv", header=TRUE, stringsAsFactors=FALSE)
catch
haul
?load
load("data/race_base_catch.RData")
load("data/race_base_haul.RData")
catch
species.codes <- c(30152,30420)
lat_lon.def <- "mean"
source("R/load-RACE-data.r")
if(!lat_lon.def %in% c("mean", "start", "end")) { stop("lat_lon.def must be mean, start, or end") }
load.data <- load_RACE_data(species.codes=species.codes, area="GOA")
head(load.data)
head(catch)
species.codes=c(30152,30420)
area="GOA"
if(file.exists("data/race_base_haul.RData")==FALSE) { stop("data/race_base_haul.RData NOT FOUND") }
if(file.exists("data/race_base_catch.RData")==FALSE) { stop("data/race_base_catch.RData NOT FOUND") }
if(file.exists("data/race_species_codes.csv")==FALSE) { stop("data/race_species_codes.csv NOT FOUND") }
load("data/race_base_catch.RData")
load("data/race_base_haul.RData")
head(catch)
head(haul)
