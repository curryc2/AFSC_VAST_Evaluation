#
#Purpose: Example of How to Use helper functions
#
#
#==================================================================================================
#NOTES:
#
#==================================================================================================
source('R/create-VAST-input.r')
require(VAST)
require(TMB)
#=======================================================================
##### SETUP INPUT DATA #####
#Generate a dataset
species.codes=c(30420) #Rockfish
lat_lon.def="mean"
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
###########################
DateFile=paste0(getwd(),'examples/VAST_output/')
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#=======================================================================
##### READ IN DATA AND BUILD vAST INPUT #####
out <- create_VAST_input(species.codes=c(30420), lat_lon.def="mean", save.Record=TRUE,
Method="Mesh", grid_size_km=25, n_X=250,
Kmeans_Config=list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 ),
strata.limits=NULL, Region="Gulf_of_Alaska",
DateFile=paste0(getwd(),'/VAST_output/'),
FieldConfig, RhoConfig, OverdispersionConfig,
ObsModel, Options)
#Unpack
TmbData <- out$TmbData
Data_Geostat <- out$Data_Geostat
Spatial_List <- out$Spatial_List
#=======================================================================
##### RUN VAST #####
#Build TMB Object
#  Compilation may take some time
TmbList <- VAST::Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,
Version = "VAST_v2_4_0", RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,
Method = Method)
Obj <- TmbList[["Obj"]]
Opt <- TMBhelper::Optimize(obj = Obj, lower = TmbList[["Lower"]],
upper = TmbList[["Upper"]], getsd = TRUE, savedir = DateFile,
bias.correct = FALSE)
#Save output
Report = Obj$report()
Save = list("Opt"=Opt, "Report"=Report, "ParHat"=Obj$env$parList(Opt$par), "TmbData"=TmbData)
save(Save, file=paste0(DateFile,"Save.RData"))
setwd("~/Projects/VAST Evaluation/AFSC_VAST_Evaluation")
#==================================================================================================
#Project Name: VAST spatial delta-GLMM (Thorson) Evaluation: Example Script
#Creator: Curry James Cunningham, NOAA/NMFS, ABL
#Date: 3.28.17
#
#Purpose: Example of How to Use helper functions
#
#
#==================================================================================================
#NOTES:
#
#==================================================================================================
source('R/create-VAST-input.r')
require(VAST)
require(TMB)
#=======================================================================
##### SETUP INPUT DATA #####
#Generate a dataset
species.codes=c(30420) #Rockfish
lat_lon.def="mean"
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
###########################
DateFile=paste0(getwd(),'examples/VAST_output/')
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#=======================================================================
##### READ IN DATA AND BUILD vAST INPUT #####
out <- create_VAST_input(species.codes=c(30420), lat_lon.def="mean", save.Record=TRUE,
Method="Mesh", grid_size_km=25, n_X=250,
Kmeans_Config=list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 ),
strata.limits=NULL, Region="Gulf_of_Alaska",
DateFile=paste0(getwd(),'/VAST_output/'),
FieldConfig, RhoConfig, OverdispersionConfig,
ObsModel, Options)
#Unpack
TmbData <- out$TmbData
Data_Geostat <- out$Data_Geostat
Spatial_List <- out$Spatial_List
#=======================================================================
##### RUN VAST #####
#Build TMB Object
#  Compilation may take some time
TmbList <- VAST::Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,
Version = "VAST_v2_4_0", RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,
Method = Method)
Obj <- TmbList[["Obj"]]
Opt <- TMBhelper::Optimize(obj = Obj, lower = TmbList[["Lower"]],
upper = TmbList[["Upper"]], getsd = TRUE, savedir = DateFile,
bias.correct = FALSE)
#Save output
Report = Obj$report()
Save = list("Opt"=Opt, "Report"=Report, "ParHat"=Obj$env$parList(Opt$par), "TmbData"=TmbData)
save(Save, file=paste0(DateFile,"Save.RData"))
DateFile
#==================================================================================================
#Project Name: VAST spatial delta-GLMM (Thorson) Evaluation: Example Script
#Creator: Curry James Cunningham, NOAA/NMFS, ABL
#Date: 3.28.17
#
#Purpose: Example of How to Use helper functions
#
#
#==================================================================================================
#NOTES:
#
#==================================================================================================
source('R/create-VAST-input.r')
require(VAST)
require(TMB)
#=======================================================================
##### SETUP INPUT DATA #####
#Generate a dataset
species.codes=c(30420) #Rockfish
lat_lon.def="mean"
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
###########################
DateFile=paste0(getwd(),'/examples/VAST_output/')
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#=======================================================================
##### READ IN DATA AND BUILD vAST INPUT #####
out <- create_VAST_input(species.codes=c(30420), lat_lon.def="mean", save.Record=TRUE,
Method="Mesh", grid_size_km=25, n_X=250,
Kmeans_Config=list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 ),
strata.limits=NULL, Region="Gulf_of_Alaska",
DateFile=paste0(getwd(),'/VAST_output/'),
FieldConfig, RhoConfig, OverdispersionConfig,
ObsModel, Options)
dev.off()
dev.off()
#==================================================================================================
#Project Name: VAST spatial delta-GLMM (Thorson) Evaluation: Example Script
#Creator: Curry James Cunningham, NOAA/NMFS, ABL
#Date: 3.28.17
#
#Purpose: Example of How to Use helper functions
#
#
#==================================================================================================
#NOTES:
#
#==================================================================================================
source('R/create-VAST-input.r')
require(VAST)
require(TMB)
#=======================================================================
##### SETUP INPUT DATA #####
#Generate a dataset
species.codes=c(30420) #Rockfish
lat_lon.def="mean"
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
###########################
DateFile=paste0(getwd(),'/examples/VAST_output/')
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#=======================================================================
##### READ IN DATA AND BUILD vAST INPUT #####
#==================================================================================================
#Project Name: VAST spatial delta-GLMM (Thorson) Evaluation: Example Script
#Creator: Curry James Cunningham, NOAA/NMFS, ABL
#Date: 3.28.17
#
#Purpose: Example of How to Use helper functions
#
#
#==================================================================================================
#NOTES:
#
#==================================================================================================
source('R/create-VAST-input.r')
require(VAST)
require(TMB)
#=======================================================================
##### SETUP INPUT DATA #####
#Generate a dataset
species.codes=c(30420) #Rockfish
lat_lon.def="mean"
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
###########################
DateFile=paste0(getwd(),'/examples/VAST_output/')
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#=======================================================================
##### READ IN DATA AND BUILD vAST INPUT #####
out <- create_VAST_input(species.codes=c(30420), lat_lon.def="mean", save.Record=TRUE,
Method="Mesh", grid_size_km=25, n_X=250,
Kmeans_Config=list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 ),
strata.limits=NULL, Region="Gulf_of_Alaska",
DateFile=DateFile,
FieldConfig, RhoConfig, OverdispersionConfig,
ObsModel, Options)
getwd()
#Unpack
TmbData <- out$TmbData
Data_Geostat <- out$Data_Geostat
Spatial_List <- out$Spatial_List
#=======================================================================
##### RUN VAST #####
#Build TMB Object
#  Compilation may take some time
TmbList <- VAST::Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,
Version = "VAST_v2_4_0", RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,
Method = Method)
Obj <- TmbList[["Obj"]]
Opt <- TMBhelper::Optimize(obj = Obj, lower = TmbList[["Lower"]],
upper = TmbList[["Upper"]], getsd = TRUE, savedir = DateFile,
bias.correct = FALSE)
Report = Obj$report()
Save = list("Opt"=Opt, "Report"=Report, "ParHat"=Obj$env$parList(Opt$par), "TmbData"=TmbData)
save(Save, file=paste0(DateFile,"Save.RData"))
#==================================================================================================
#Project Name: NORTHERN ROCKFISH ASSESSMENT - VAST spatial delta-GLMM (Thorson)
#Creator: Curry James Cunningham, NOAA/NMFS, ABL
#Date: 3.10.17
#
#Purpose: To Generate Index of Abundance from RACE Trawl Survey for Assessment
#
# 1) Read in data using FishData from throson
# 2) Run VAST model
# 3) Compare trends with design-based index
# 4)
#
#
#==================================================================================================
#NOTES:
#  a) in ifelse(x,a,b) - zero is converted to false
#  b) comments count, blank lines do not.
#  c) Likelihood functions need to reference data directly, not other variable with that value: "data ~ multi()"
#  d) Cannot output elements of objects that are never initialized within the model
#  e) The n value in dmulti(p,n) must be data and must be an integer
#  f) Dirichlet-Multinomial: Estimating the dirichWeight is necessary, errors and inability to fit abund.
#       data if pred. AC not turned into proportion and multip by dirichWeight
#     Error if pred is =0, small offsets allow to run w/o error, but not fit abund well.
#  g) Using the max(1, xxx) does not correct for issues assocaited with bycatch removals.
#  h) Use the narrow prior from King et al. on coefficients. beta.prod
#
#==================================================================================================
require(VAST)
require(FishData)
require(ThorsonUtilities)
require(TMB)
#Working Directory
if(.Platform$OS.type=='unix') { #Laptop
wd <- NULL
}else { #Desktop
wd <- "//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/Rockfish Assessment/VAST"
}
setwd(wd)
#========================================================================
##### READ IN DATA #####
source('R/Get Trawl Survey Biomass.r')
# surv.dat <- get_TSB(species=30420,
#                     username="ccunningham",
#                     password="jnux6408")
#Alaternative
rockfish<-read.csv("data/race_cpue_by_haul.csv",header=T,skip=7)
nr<-rockfish[rockfish$Species.Code==30420,]
nr$area_sw<-nr[,16]*nr[,17]/1000
nr2<-nr[,c(18,19,4,2,25,23,30,6)]
names(nr2)<-c("lat","lon","TowID","year","catch","spp","area_sw","Vessel")
nr2<-nr2[-c(2862,5341,6964),]
#Years of Survey Data
yrs.surv <- sort(unique(nr2$year))
n.yrs.surv <- length(yrs.surv)
#========================================================================
##### PREPARE VAST MODEL #####
#SETTINGS
Data_Set = "GOA_NorthernRockfish"
# Next use latest version for CPP code
Version <- "VAST_v2_4_0" #
#SPATIAL SETTINGS
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
grid_size_km = 25
n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
#MODEL SETTINGS
FieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)
RhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)
OverdispersionConfig = c(Delta1 = 0, Delta2 = 0)
ObsModel = c(1, 0) #Delta Model
# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution
#SPECIFY OUTPUTS
Options = c(SD_site_density = 0, SD_site_logdensity = 0,
Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,
Calculate_Cov_SE = 0, Calculate_Synchrony = 0,
Calculate_Coherence = 0)
#SET SRATIFICATOIN
#Basic - Single Area
strata.limits <- data.frame(STRATA = c("All_areas"),
west_border = c(-Inf),
east_border = c(Inf))
#Divide Among E,C,W Gulf....
# strata.limits <- data.frame(STRATA = c("All_areas","West","Central",'Eastern'),
#                             west_border = c(-Inf, -Inf, -159, -147),
#                             east_border = c(Inf, -159, -147, Inf))
#DERIVED OBJECTS
Region = "Gulf_of_Alaska"
#Might need to use
# Region = "Others"
#SAVE SETTINGS
#Location for saving files
DateFile = paste0(getwd(),'/VAST_output/')
dir.create(DateFile)
#Save Settings for Later reference
Record = ThorsonUtilities::bundlelist(c("Data_Set",
"Version", "Method", "grid_size_km", "n_x", "FieldConfig",
"RhoConfig", "OverdispersionConfig", "ObsModel",
"Kmeans_Config"))
save(Record, file = file.path(DateFile, "Record.RData"))
capture.output(Record, file = paste0(DateFile, "Record.txt"))
#PREPARING THE DATA
Data_Geostat = nr2[,c(5,4,8,7,1,2)]
head(Data_Geostat)
names(Data_Geostat) = c("Catch_KG","Year","Vessel","AreaSwept_km2","Lat","Lon")
#Extrapolation grid
Extrapolation_List = SpatialDeltaGLMM::Prepare_Extrapolation_Data_Fn(Region = Region,
strata.limits = strata.limits)
#DERIVED OBJECTS FOR SPATIO-TEMPORAL ESTIMATION
Spatial_List = SpatialDeltaGLMM::Spatial_Information_Fn(grid_size_km = grid_size_km,
n_x = n_x, Method = Method, Lon = Data_Geostat[,"Lon"], Lat = Data_Geostat[, "Lat"],
Extrapolation_List = Extrapolation_List,
randomseed = Kmeans_Config[["randomseed"]],
nstart = Kmeans_Config[["nstart"]],
iter.max = Kmeans_Config[["iter.max"]], DirPath = DateFile,
Save_Results = FALSE)
# Add knots to Data_Geostat
Data_Geostat = cbind(Data_Geostat, knot_i = Spatial_List$knot_i)
#========================================================================
##### BUILD AND RUN VAST MODEL #####
#Build Data inputs
TmbData = Data_Fn(Version = Version, FieldConfig = FieldConfig,
OverdispersionConfig = OverdispersionConfig, RhoConfig = RhoConfig,
ObsModel = ObsModel, c_i = rep(0, nrow(Data_Geostat)),
b_i = Data_Geostat[, "Catch_KG"], a_i = Data_Geostat[,"AreaSwept_km2"],
v_i = as.numeric(Data_Geostat[,"Vessel"]) - 1,
s_i = Data_Geostat[, "knot_i"] - 1, t_i = Data_Geostat[, "Year"],
a_xl = Spatial_List$a_xl,
MeshList = Spatial_List$MeshList, GridList = Spatial_List$GridList,
Method = Spatial_List$Method, Options = Options)
#Build TMB Object
#  Compilation may take some time
TmbList = Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,
Version = Version, RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,
Method = Method)
Obj = TmbList[["Obj"]]
#Look at fixed effects
Obj$par
Obj$gr()
#Estimate fixed effects and Predict random effects
start.4 <- date()
Opt = TMBhelper::Optimize(obj = Obj, lower = TmbList[["Lower"]],
upper = TmbList[["Upper"]], getsd = TRUE, savedir = DateFile,
bias.correct = FALSE)
end.4 <- date()
#Save output
Report = Obj$report()
Save = list("Opt"=Opt, "Report"=Report, "ParHat"=Obj$env$parList(Opt$par), "TmbData"=TmbData)
save(Save, file=paste0(DateFile,"Save.RData"))
head(Data_Geostat)
setwd('\\nmfs.local\AKC-ABL\Users\curry.cunningham\My Documents\Projects\VAST Evaluation\New Survey Data from Dana 3.29.17')
setwd('nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/VAST Evaluation/New Survey Data from Dana 3.29.17')
setwd('//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/VAST Evaluation/New Survey Data from Dana 3.29.17')
data <- read.csv('goa_ai_cpue.csv', header=TRUE, stringsAsFactors=FALSE)
save(data, file='goa_ai_cpue.csv')
getwd()
save(data, file='goa_ai_cpue.RData')
setwd('//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/VAST Evaluation/New Survey Data from Dana 3.29.17')
#Read in Data
data <- read.csv('goa_ai_cpue.csv', header=TRUE, stringsAsFactors=FALSE)
#Resave at RData
save(data, file='goa_ai_cpue.RData')
out <- load('goa_ai_cpue.RData')
out
data
head(data)
names(data)
unique(data$HAULJOIN)
head(data)
length(unique(data$HAULJOIN))
sort(unique(data$YEAR))
#  a)
#==================================================================================================
setwd('//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/VAST Evaluation/New Survey Data from Dana 3.29.17')
#Read in Data
goa_ai_cpue <- read.csv('goa_ai_cpue.csv', header=TRUE, stringsAsFactors=FALSE)
#Resave at RData
save(goa_ai_cpue, file='goa_ai_cpue.RData')
load('goa_ai_cpue.RData')
head(goa_ai_cpue)
nrow(goa_ai_cpue[goa_ai_cpue$SURVEY=='GOA',])
nrow(goa_ai_cpue[goa_ai_cpue$SURVEY=='GOA' & goa_ai_cpue$SPECIES_CODE==21740,])
goa_ai_cpue[goa_ai_cpue$SURVEY=='GOA' & goa_ai_cpue$SPECIES_CODE==21740 & is.na(goa_ai_cpue$WEIGHT),]
species.code <- 30420
nrow(goa_ai_cpue[goa_ai_cpue$SURVEY=='GOA' & goa_ai_cpue$SPECIES_CODE==species.code,])
species.code <- 21740
nrow(goa_ai_cpue[goa_ai_cpue$SURVEY=='GOA' & goa_ai_cpue$SPECIES_CODE==species.code,])
length(unique(goa_ai_cpue$HAULJOIN[goa_ai_cpue$SURVEY=='GOA']))
?Build_TMB_Fn
?SpatialDeltaGLMM::Prepare_Extrapolation_Data_Fn
?SpatialDeltaGLMM::Spatial_Information_Fn
sort(unique(goa_ai_cpue$YEAR[goa_ai_cpue$SURVEY=='GOA'])
sort(unique(goa_ai_cpue$YEAR[goa_ai_cpue$SURVEY=='GOA']))
