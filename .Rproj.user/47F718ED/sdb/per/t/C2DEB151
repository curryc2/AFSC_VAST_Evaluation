{
    "collab_server" : "",
    "contents" : "#######\n#' Create input objects for VAST model\n#'   NOTE: Currently only tested for single-species application\n#'\n#' @param species.codes vector of species codes to be evaluated\n#' @param lat_lon.def string defining how tow-specific Latitude and Longitude will be calculated\n#' @param Method \n#' @param grid_size_km \n#' @param n_X \n#' @param Kmeans_Config \n#' @param strata.limits dataframe of strata limits for post-hoc apportionment\n#' @param Region string indicating region of evaluation, one of: Gulf_of_Alaska, Eastern_Bering_Sea, or Aleutian_Islands\n#' @param DateFile path for directory housing VAST model and output figures and objects\n#' @param FieldConfig \n#' @param RhoConfig \n#' @param OverdispersionConfig \n#' @param ObsModel \n#' @param Options \n#' @param save.Record boolean indicating whether or not VAST settings record is saved\n#'\n#' @return VAST_input: Containing Data_Geostat, Spatial_List, Extrapolation_List, and TmbData\n#' @export\ncreate_VAST_input <- function(species.codes, lat_lon.def=\"mean\", save.Record=TRUE,\n                                Method=\"Mesh\", grid_size_km=25, n_X=250,\n                                Kmeans_Config=list( \"randomseed\"=1, \"nstart\"=100, \"iter.max\"=1e3 ),\n                                strata.limits=NULL, Region=\"Gulf_of_Alaska\",\n                                DateFile=paste0(getwd(),'/VAST_output/'),\n                                FieldConfig, RhoConfig, OverdispersionConfig,\n                                ObsModel, Options) {\n  \n  # require(SpatialDeltaGLMM)\n  source('R/create-Data-Geostat.r')\n  \n  #vERSION NUMBER\n  Version  <- \"VAST_v2_4_0\"\n  \n  #DATA Set\n  Data_Set <- \"VAST_EVAL\"\n  \n  #Operation if no strata.limits are defined\n  if(is.null(strata.limits)) {\n    strata.limits <- data.frame(STRATA = c(\"All_areas\"),\n                                west_border = c(-Inf),\n                                east_border = c(Inf))\n  }\n  \n  #Determine Correct area to allign with RACE survey\n  if(Region %in% c(\"Gulf_of_Alaska\", \"Eastern_Bering_Sea\", \"Aleutian_Islands\")) {\n    if(Region==\"Gulf_of_Alaska\") { area <- \"GOA\" }\n    if(Region==\"Eastern_Bering_Sea\") { area <- \"BS\" }\n    if(Region==\"Aleutian_Islands\") { area <- \"AI\" }\n  }else {\n    stop(\"Region must be one of: Gulf_of_Alaska, Eastern_Bering_Sea, Aleutian_Islands\")\n  }\n  \n  #Retreive Data\n  Data_Geostat <- create_Data_Geostat(species.codes=species.codes, lat_lon.def=lat_lon.def, area=area) \n  \n  #Build Extrapolition Grid\n  Extrapolation_List  <- SpatialDeltaGLMM::Prepare_Extrapolation_Data_Fn(Region = Region, strata.limits = strata.limits)\n  \n  #Create Location for Saving Files\n  dir.create(DateFile)\n  \n  #Save Settings for Later reference\n  if(save.Record==TRUE) {\n    # Record = ThorsonUtilities::bundlelist(c(\"Data_Set\"=Data_Set,\n    #                                         \"Version\"=Version, \"Method\"=Method, \"grid_size_km\"=grid_size_km,\n    #                                         \"n_x\"=n_X, \"FieldConfig\"=FieldConfig,\n    #                                         \"RhoConfig\"=RhoConfig, \"OverdispersionConfig\"=OverdispersionConfig,\n    #                                         \"ObsModel\"=ObsModel,\n    #                                         \"Kmeans_Config\"=Kmeans_Config))\n    # # save(Record, file = file.path(DateFile, \"Record.RData\"))\n    # capture.output(Record, file = paste0(DateFile, \"Record.txt\"))\n  \n  }\n  #Generate Information used for spatio-temporal estimation\n  Spatial_List <- SpatialDeltaGLMM::Spatial_Information_Fn(grid_size_km = grid_size_km,\n                                         n_x = n_x, Method = Method, Lon = Data_Geostat[,\"Lon\"], Lat = Data_Geostat[, \"Lat\"],\n                                         Extrapolation_List = Extrapolation_List,\n                                         randomseed = Kmeans_Config[[\"randomseed\"]],\n                                         nstart = Kmeans_Config[[\"nstart\"]],\n                                         iter.max = Kmeans_Config[[\"iter.max\"]], DirPath = DateFile,\n                                         Save_Results = FALSE)\n  #Update Data_Geostat\n  Data_Geostat <- cbind(Data_Geostat, knot_i = Spatial_List$knot_i)\n  \n  #Build VAST model data input\n  \n  if(length(species.codes) > 1) {\n    #MULTISPECIES\n    TmbData <- VAST::Data_Fn(Version=Version, FieldConfig=FieldConfig, \n                      OverdispersionConfig=OverdispersionConfig,\n                      RhoConfig=RhoConfig, ObsModel=ObsModel, c_i=as.numeric(Data_Geostat[,'spp'])-1,\n                      b_i=Data_Geostat[,'Catch_KG'], a_i=Data_Geostat[,'AreaSwept_km2'],\n                      v_i=as.numeric(Data_Geostat[,'Vessel'])-1, s_i=Data_Geostat[,'knot_i']-1,\n                      t_i=Data_Geostat[,'Year'], a_xl=Spatial_List$a_xl, MeshList=Spatial_List$MeshList,\n                      GridList=Spatial_List$GridList, Method=Spatial_List$Method, Options=Options )\n  }else {\n    #SINGLE SPECIES\n    TmbData = VAST::Data_Fn(Version = Version, FieldConfig = FieldConfig,\n                      OverdispersionConfig = OverdispersionConfig, RhoConfig = RhoConfig,\n                      ObsModel = ObsModel, c_i = rep(0, nrow(Data_Geostat)),\n                      b_i = Data_Geostat[, \"Catch_KG\"], a_i = Data_Geostat[,\"AreaSwept_km2\"],\n                      v_i = as.numeric(Data_Geostat[,\"Vessel\"]) - 1,\n                      s_i = Data_Geostat[, \"knot_i\"] - 1, t_i = Data_Geostat[, \"Year\"],\n                      a_xl = Spatial_List$a_xl,\n                      MeshList = Spatial_List$MeshList, GridList = Spatial_List$GridList,\n                      Method = Spatial_List$Method, Options = Options)\n  }\n\n  \n  \n  #Return Section\n  VAST_input <- NULL\n  VAST_input$Data_Geostat <- Data_Geostat\n  VAST_input$Spatial_List <- Spatial_List\n  VAST_input$TmbData <- TmbData\n  VAST_input$Extrapolation_List <- Extrapolation_List\n  \n  return(VAST_input)\n}\n\n\n\n",
    "created" : 1490731399181.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4095440771",
    "id" : "C2DEB151",
    "lastKnownWriteTime" : 1490837319,
    "last_content_update" : 1490837319979,
    "path" : "~/Projects/VAST Evaluation/AFSC_VAST_Evaluation/R/create-VAST-input.r",
    "project_path" : "R/create-VAST-input.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}