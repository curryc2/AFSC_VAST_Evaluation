{
    "collab_server" : "",
    "contents" : "#==================================================================================================\n#Project Name: VAST spatial delta-GLMM (Thorson) Evaluation: Example Script\n#Creator: Curry James Cunningham, NOAA/NMFS, ABL\n#Date: 3.28.17\n#\n#Purpose: Example of How to Use helper functions\n#\n#\n#==================================================================================================\n#NOTES:\n#\n#==================================================================================================\nsource('R/create-VAST-input.r')\nsource('R/plot-VAST-output.r')\n\nrequire(VAST)\nrequire(TMB)\n\n#=======================================================================\n##### SETUP INPUT DATA #####\n\n#Generate a dataset\nspecies.codes<- c(30420) #Rockfish\nlat_lon.def=\"mean\"\n\n\n\n#SPATIAL SETTINGS\nMethod = c(\"Grid\", \"Mesh\", \"Spherical_mesh\")[2]\ngrid_size_km = 25\nn_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations\nKmeans_Config = list( \"randomseed\"=1, \"nstart\"=100, \"iter.max\"=1e3 )\n\n\n#SET SRATIFICATOIN\n#Basic - Single Area\nstrata.limits <- data.frame(STRATA = c(\"All_areas\"),\n                            west_border = c(-Inf),\n                            east_border = c(Inf))\n\n\n#DERIVED OBJECTS\nRegion = \"Gulf_of_Alaska\"\n###########################\nDateFile=paste0(getwd(),'/examples/VAST_output/')\n\n#MODEL SETTINGS\nFieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)\nRhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)\nOverdispersionConfig = c(Delta1 = 0, Delta2 = 0)\n\nObsModel = c(1, 0) #Delta Model\n# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution\n\n#SPECIFY OUTPUTS\nOptions = c(SD_site_density = 0, SD_site_logdensity = 0,\n            Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,\n            Calculate_Cov_SE = 0, Calculate_Synchrony = 0,\n            Calculate_Coherence = 0)\n\n#=======================================================================\n##### READ IN DATA AND BUILD vAST INPUT #####\n\n\n\n\nVAST_input <- create_VAST_input(species.codes=species.codes, lat_lon.def=lat_lon.def, save.Record=TRUE,\n                                     Method=\"Mesh\", grid_size_km=25, n_X=250,\n                                     Kmeans_Config=list( \"randomseed\"=1, \"nstart\"=100, \"iter.max\"=1e3 ),\n                                     strata.limits=NULL, Region=\"Gulf_of_Alaska\",\n                                     DateFile=DateFile,\n                                     FieldConfig, RhoConfig, OverdispersionConfig,\n                                     ObsModel, Options)\n\n\n\n#Unpack\nTmbData <- VAST_input$TmbData\nData_Geostat <- VAST_input$Data_Geostat\nSpatial_List <- VAST_input$Spatial_List\nExtrapolation_List <- VAST_input$Extrapolation_List\n\n\n#=======================================================================\n##### RUN VAST #####\n\n\n\n#Build TMB Object\n#  Compilation may take some time\nTmbList <- VAST::Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,\n                                Version = \"VAST_v2_4_0\", RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,\n                                Method = Method)\nObj <- TmbList[[\"Obj\"]]\n\n\nOpt <- TMBhelper::Optimize(obj = Obj, lower = TmbList[[\"Lower\"]],\n                          upper = TmbList[[\"Upper\"]], getsd = TRUE, savedir = DateFile,\n                          bias.correct = FALSE)\n#Save output\nReport = Obj$report()\nSave = list(\"Opt\"=Opt, \"Report\"=Report, \"ParHat\"=Obj$env$parList(Opt$par), \"TmbData\"=TmbData)\nsave(Save, file=paste0(DateFile,\"Save.RData\"))\n\n#========================================================================\n##### DIAGNOSTIC PLOTS #####\nplot_VAST_output(Opt, Report, DateFile, Region, TmbData, Data_Geostat, Extrapolation_List, Spatial_List)\n\n\n\n# \n# \n# #========================================================================\n# ##### DIAGNOSTIC PLOTS #####\n# \n# #Plot spatial distribution of data\n# SpatialDeltaGLMM::Plot_data_and_knots(Extrapolation_List = Extrapolation_List,\n#                                       Spatial_List = Spatial_List, Data_Geostat = Data_Geostat,\n#                                       PlotDir = DateFile)\n# \n# #Diagnostics for Encounter Probability\n# #  \"Diag--Encounter_prob\"\n# Enc_prob = SpatialDeltaGLMM::Check_encounter_prob(Report = Report,\n#                                                   Data_Geostat = Data_Geostat,\n#                                                   DirName = DateFile)\n# \n# #Diagnostics for positive-catch-rate component\n# Q = SpatialDeltaGLMM::QQ_Fn(TmbData = TmbData, Report = Report,\n#                             FileName_PP = paste0(DateFile, \"Posterior_Predictive.jpg\"),\n#                             FileName_Phist = paste0(DateFile, \"Posterior_Predictive-Histogram.jpg\"),\n#                             FileName_QQ = paste0(DateFile, \"Q-Q_plot.jpg\"),\n#                             FileName_Qhist = paste0(DateFile, \"Q-Q_hist.jpg\"))\n# \n# \n# #Diagnostics for plotting residuals on a map\n# \n# \n# MapDetails_List = SpatialDeltaGLMM::MapDetails_Fn( \"Region\"=Region,\n#                                                    \"NN_Extrap\"=Spatial_List$PolygonList$NN_Extrap,\n#                                                    \"Extrapolation_List\"=Extrapolation_List )\n# \n# #Which Years to Include\n# Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))\n# Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))\n# \n# #Or just include years with observations\n# \n# #Plot Pearson Residuals\n# #  Look for spatial patterns-- indication of \"overshrinking\"\n# #  Creates \"maps--\" files\n# SpatialDeltaGLMM:::plot_residuals(Lat_i = Data_Geostat[,\"Lat\"], Lon_i = Data_Geostat[, \"Lon\"], TmbData = TmbData,\n#                                   Report = Report, Q = Q, savedir = DateFile, MappingDetails = MapDetails_List[[\"MappingDetails\"]],\n#                                   PlotDF = MapDetails_List[[\"PlotDF\"]], MapSizeRatio = MapDetails_List[[\"MapSizeRatio\"]],\n#                                   Xlim = MapDetails_List[[\"Xlim\"]], Ylim = MapDetails_List[[\"Ylim\"]],\n#                                   FileName = DateFile, Year_Set = Year_Set, Years2Include = Years2Include,\n#                                   Rotate = MapDetails_List[[\"Rotate\"]], Cex = MapDetails_List[[\"Cex\"]],\n#                                   Legend = MapDetails_List[[\"Legend\"]], zone = MapDetails_List[[\"Zone\"]],\n#                                   mar = c(0, 0, 2, 0), oma = c(3.5, 3.5, 0, 0), cex = 1.8)\n# \n# \n# \n# \n# #========================================================================\n# ##### MODEL OUTPUT PLOTS #####\n# \n# #Direction of \"geometric anisotropy\"\n# SpatialDeltaGLMM::PlotAniso_Fn(FileName = paste0(DateFile,\"Aniso.png\"),\n#                                Report = Report, TmbData = TmbData)\n# \n# #Density Surface for Each Year -- \"Dens\"\n# SpatialDeltaGLMM::PlotResultsOnMap_Fn(plot_set = c(3),\n#                                       MappingDetails = MapDetails_List[[\"MappingDetails\"]],\n#                                       Report = Report, Sdreport = Opt$SD, PlotDF = MapDetails_List[[\"PlotDF\"]],\n#                                       MapSizeRatio = MapDetails_List[[\"MapSizeRatio\"]],\n#                                       Xlim = MapDetails_List[[\"Xlim\"]], Ylim = MapDetails_List[[\"Ylim\"]],\n#                                       FileName = DateFile, Year_Set = Year_Set, Years2Include = Years2Include,\n#                                       Rotate = MapDetails_List[[\"Rotate\"]], Cex = MapDetails_List[[\"Cex\"]],\n#                                       Legend = MapDetails_List[[\"Legend\"]], zone = MapDetails_List[[\"Zone\"]],\n#                                       mar = c(0, 0, 2, 0), oma = c(3.5, 3.5, 0, 0), cex = 1.8,\n#                                       plot_legend_fig = TRUE)\n# \n# \n# \n# #Generate Index of Abundance\n# \n# Index = SpatialDeltaGLMM::PlotIndex_Fn(DirName = DateFile,\n#                                        TmbData = TmbData, Sdreport = Opt[[\"SD\"]],\n#                                        Year_Set = Year_Set,\n#                                        Years2Include = Years2Include, \n#                                        use_biascorr = TRUE)\n# \n# idx <- Index$Table\n# \n# \n# dev.off()\n# #Plotting \n# \n# yrs.surv <- Year_Set[Years2Include]\n# x.lim <- c(min(yrs.surv), max(yrs.surv))\n# up.sd <- idx$Estimate_metric_tons + idx$SD_mt\n# low.sd <- idx$Estimate_metric_tons - idx$SD_mt\n# y.lim <- c(min(low.sd), max(up.sd))\n# \n# loc.yrs <- which(idx$Year %in% yrs.surv)\n# \n# \n# plot(x=NULL, y=NULL, xlim=x.lim, ylim=y.lim, ylab='Survey Estimate (metric Tons)', xlab='Year',\n#      main='Gulf of Alaska\\nNorthern Rockfish Survey Index')\n# \n# polygon(x=c(yrs.surv, rev(yrs.surv)), y=c(low.sd[loc.yrs],rev(up.sd[loc.yrs])), col='lightblue', border=FALSE)\n# lines(x=yrs.surv, y=idx$Estimate_metric_tons[loc.yrs], col='red')\n# points(x=yrs.surv, y=idx$Estimate_metric_tons[loc.yrs], pch=21, bg='red')\n# grid(col='black')\n# \n# \n# #Center of gravity and range expansion/contraction\n# #  For some reason I can't actually change the years to plot \n# SpatialDeltaGLMM::Plot_range_shifts(Report = Report,\n#                                     TmbData = TmbData, Sdreport = Opt[[\"SD\"]], Znames = colnames(TmbData$Z_xm),\n#                                     PlotDir = DateFile, Year_Set = Year_Set)",
    "created" : 1490742932440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2497423746",
    "id" : "6B2402D2",
    "lastKnownWriteTime" : 1490838107,
    "last_content_update" : 1490838107876,
    "path" : "~/Projects/VAST Evaluation/AFSC_VAST_Evaluation/examples/Run VAST Single Species.r",
    "project_path" : "examples/Run VAST Single Species.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}