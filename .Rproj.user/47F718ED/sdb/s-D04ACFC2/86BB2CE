{
    "collab_server" : "",
    "contents" : "#==================================================================================================\n#Project Name: NORTHERN ROCKFISH ASSESSMENT - VAST spatial delta-GLMM (Thorson)\n#Creator: Curry James Cunningham, NOAA/NMFS, ABL\n#Date: 3.10.17\n#\n#Purpose: To Generate Index of Abundance from RACE Trawl Survey for Assessment\n#\n# 1) Read in data using FishData from throson\n# 2) Run VAST model\n# 3) Compare trends with design-based index\n# 4) \n#\n#\n#==================================================================================================\n#NOTES:\n#  a) in ifelse(x,a,b) - zero is converted to false\n#  b) comments count, blank lines do not. \n#  c) Likelihood functions need to reference data directly, not other variable with that value: \"data ~ multi()\"\n#  d) Cannot output elements of objects that are never initialized within the model\n#  e) The n value in dmulti(p,n) must be data and must be an integer\n#  f) Dirichlet-Multinomial: Estimating the dirichWeight is necessary, errors and inability to fit abund.\n#       data if pred. AC not turned into proportion and multip by dirichWeight\n#     Error if pred is =0, small offsets allow to run w/o error, but not fit abund well.\n#  g) Using the max(1, xxx) does not correct for issues assocaited with bycatch removals.\n#  h) Use the narrow prior from King et al. on coefficients. beta.prod\n#\n#==================================================================================================\nrequire(VAST)\nrequire(FishData)\nrequire(ThorsonUtilities)\nrequire(TMB)\n\n#Working Directory\nif(.Platform$OS.type=='unix') { #Laptop\n  wd <- NULL\n}else { #Desktop\n  wd <- \"//nmfs.local/AKC-ABL/Users/curry.cunningham/My Documents/Projects/Rockfish Assessment/VAST\"  \n}\nsetwd(wd)\n\n\n\n\n#========================================================================\n##### READ IN DATA #####\nsource('R/Get Trawl Survey Biomass.r')\n\n# surv.dat <- get_TSB(species=30420,\n#                     username=\"ccunningham\",\n#                     password=\"jnux6408\")\n\n#Alaternative\nrockfish<-read.csv(\"data/race_cpue_by_haul.csv\",header=T,skip=7)\n\nnr<-rockfish[rockfish$Species.Code==30420,]\nnr$area_sw<-nr[,16]*nr[,17]/1000\nnr2<-nr[,c(18,19,4,2,25,23,30,6)]\nnames(nr2)<-c(\"lat\",\"lon\",\"TowID\",\"year\",\"catch\",\"spp\",\"area_sw\",\"Vessel\")\nnr2<-nr2[-c(2862,5341,6964),]\n\n#Years of Survey Data\nyrs.surv <- sort(unique(nr2$year))\nn.yrs.surv <- length(yrs.surv)\n\n#========================================================================\n##### PREPARE VAST MODEL #####\n\n#SETTINGS\nData_Set = \"GOA_NorthernRockfish\"\n\n# Next use latest version for CPP code\nVersion <- \"VAST_v2_4_0\" #\n\n#SPATIAL SETTINGS \nMethod = c(\"Grid\", \"Mesh\", \"Spherical_mesh\")[2]\ngrid_size_km = 25\nn_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations\nKmeans_Config = list( \"randomseed\"=1, \"nstart\"=100, \"iter.max\"=1e3 )\n\n#MODEL SETTINGS\nFieldConfig = c(Omega1 = 1, Epsilon1 = 1, Omega2 = 1, Epsilon2 = 1)\nRhoConfig = c(Beta1 = 0, Beta2 = 0, Epsilon1 = 0, Epsilon2 = 0)\nOverdispersionConfig = c(Delta1 = 0, Delta2 = 0)\n\nObsModel = c(1, 0) #Delta Model\n# ObsModel = c(1, 1) #Poisson-Process Link function approximating Tweedie distribution \n\n#SPECIFY OUTPUTS\nOptions = c(SD_site_density = 0, SD_site_logdensity = 0,\n            Calculate_Range = 1, Calculate_evenness = 0, Calculate_effective_area = 1,\n            Calculate_Cov_SE = 0, Calculate_Synchrony = 0,\n            Calculate_Coherence = 0)\n\n\n#SET SRATIFICATOIN\n#Basic - Single Area\nstrata.limits <- data.frame(STRATA = c(\"All_areas\"),\n                            west_border = c(-Inf),\n                            east_border = c(Inf))\n\n#Divide Among E,C,W Gulf....\n# strata.limits <- data.frame(STRATA = c(\"All_areas\",\"West\",\"Central\",'Eastern'),\n#                             west_border = c(-Inf, -Inf, -159, -147),\n#                             east_border = c(Inf, -159, -147, Inf))\n\n\n#DERIVED OBJECTS\nRegion = \"Gulf_of_Alaska\"\n#Might need to use\n# Region = \"Others\"\n\n\n#SAVE SETTINGS\n#Location for saving files\nDateFile = paste0(getwd(),'/VAST_output/')\ndir.create(DateFile)\n\n#Save Settings for Later reference\nRecord = ThorsonUtilities::bundlelist(c(\"Data_Set\",\n                                        \"Version\", \"Method\", \"grid_size_km\", \"n_x\", \"FieldConfig\",\n                                        \"RhoConfig\", \"OverdispersionConfig\", \"ObsModel\",\n                                        \"Kmeans_Config\"))\nsave(Record, file = file.path(DateFile, \"Record.RData\"))\ncapture.output(Record, file = paste0(DateFile, \"Record.txt\"))\n\n#PREPARING THE DATA\nData_Geostat = nr2[,c(5,4,8,7,1,2)]\nhead(Data_Geostat)\nnames(Data_Geostat) = c(\"Catch_KG\",\"Year\",\"Vessel\",\"AreaSwept_km2\",\"Lat\",\"Lon\")\n\n\n#Extrapolation grid\nExtrapolation_List = SpatialDeltaGLMM::Prepare_Extrapolation_Data_Fn(Region = Region,\n                                                                     strata.limits = strata.limits)\n\n\n#DERIVED OBJECTS FOR SPATIO-TEMPORAL ESTIMATION\nSpatial_List = SpatialDeltaGLMM::Spatial_Information_Fn(grid_size_km = grid_size_km,\n                                                        n_x = n_x, Method = Method, Lon = Data_Geostat[,\"Lon\"], Lat = Data_Geostat[, \"Lat\"],\n                                                        Extrapolation_List = Extrapolation_List,\n                                                        randomseed = Kmeans_Config[[\"randomseed\"]],\n                                                        nstart = Kmeans_Config[[\"nstart\"]],\n                                                        iter.max = Kmeans_Config[[\"iter.max\"]], DirPath = DateFile,\n                                                        Save_Results = FALSE)\n# Add knots to Data_Geostat\nData_Geostat = cbind(Data_Geostat, knot_i = Spatial_List$knot_i)\n\n\n#========================================================================\n##### BUILD AND RUN VAST MODEL #####\n\n#Build Data inputs\nTmbData = Data_Fn(Version = Version, FieldConfig = FieldConfig,\n                  OverdispersionConfig = OverdispersionConfig, RhoConfig = RhoConfig,\n                  ObsModel = ObsModel, c_i = rep(0, nrow(Data_Geostat)),\n                  b_i = Data_Geostat[, \"Catch_KG\"], a_i = Data_Geostat[,\"AreaSwept_km2\"],\n                  v_i = as.numeric(Data_Geostat[,\"Vessel\"]) - 1,\n                  s_i = Data_Geostat[, \"knot_i\"] - 1, t_i = Data_Geostat[, \"Year\"],\n                  a_xl = Spatial_List$a_xl,\n                  MeshList = Spatial_List$MeshList, GridList = Spatial_List$GridList,\n                  Method = Spatial_List$Method, Options = Options)\n\n#Build TMB Object\n#  Compilation may take some time\nTmbList = Build_TMB_Fn(TmbData = TmbData, RunDir = DateFile,\n                       Version = Version, RhoConfig = RhoConfig, loc_x = Spatial_List$loc_x,\n                       Method = Method)\nObj = TmbList[[\"Obj\"]]\n\n#Look at fixed effects\nObj$par\nObj$gr()\n\n#Estimate fixed effects and Predict random effects\nstart.4 <- date()\nOpt = TMBhelper::Optimize(obj = Obj, lower = TmbList[[\"Lower\"]],\n                          upper = TmbList[[\"Upper\"]], getsd = TRUE, savedir = DateFile,\n                          bias.correct = FALSE)\nend.4 <- date()\n#Save output\nReport = Obj$report()\nSave = list(\"Opt\"=Opt, \"Report\"=Report, \"ParHat\"=Obj$env$parList(Opt$par), \"TmbData\"=TmbData)\nsave(Save, file=paste0(DateFile,\"Save.RData\"))\n\n\n#========================================================================\n##### DIAGNOSTIC PLOTS #####\n\n#Plot spatial distribution of data\nSpatialDeltaGLMM::Plot_data_and_knots(Extrapolation_List = Extrapolation_List,\n                                        Spatial_List = Spatial_List, Data_Geostat = Data_Geostat,\n                                        PlotDir = DateFile)\n\n#Diagnostics for Encounter Probability\n#  \"Diag--Encounter_prob\"\nEnc_prob = SpatialDeltaGLMM::Check_encounter_prob(Report = Report,\n                                                  Data_Geostat = Data_Geostat,\n                                                  DirName = DateFile)\n\n#Diagnostics for positive-catch-rate component\nQ = SpatialDeltaGLMM::QQ_Fn(TmbData = TmbData, Report = Report,\n                            FileName_PP = paste0(DateFile, \"Posterior_Predictive.jpg\"),\n                            FileName_Phist = paste0(DateFile, \"Posterior_Predictive-Histogram.jpg\"),\n                            FileName_QQ = paste0(DateFile, \"Q-Q_plot.jpg\"),\n                            FileName_Qhist = paste0(DateFile, \"Q-Q_hist.jpg\"))\n\n\n#Diagnostics for plotting residuals on a map\n\n\nMapDetails_List = SpatialDeltaGLMM::MapDetails_Fn( \"Region\"=Region,\n                                                     \"NN_Extrap\"=Spatial_List$PolygonList$NN_Extrap,\n                                                     \"Extrapolation_List\"=Extrapolation_List )\n\n#Which Years to Include\nYear_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))\nYears2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))\n\n#Or just include years with observations\n# Year_Set = y\n# Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))\n\n#Plot Pearson Residuals\n#  Look for spatial patterns-- indication of \"overshrinking\"\n#  Creates \"maps--\" files\nSpatialDeltaGLMM:::plot_residuals(Lat_i = Data_Geostat[,\"Lat\"], Lon_i = Data_Geostat[, \"Lon\"], TmbData = TmbData,\n                                  Report = Report, Q = Q, savedir = DateFile, MappingDetails = MapDetails_List[[\"MappingDetails\"]],\n                                  PlotDF = MapDetails_List[[\"PlotDF\"]], MapSizeRatio = MapDetails_List[[\"MapSizeRatio\"]],\n                                  Xlim = MapDetails_List[[\"Xlim\"]], Ylim = MapDetails_List[[\"Ylim\"]],\n                                  FileName = DateFile, Year_Set = Year_Set, Years2Include = Years2Include,\n                                  Rotate = MapDetails_List[[\"Rotate\"]], Cex = MapDetails_List[[\"Cex\"]],\n                                  Legend = MapDetails_List[[\"Legend\"]], zone = MapDetails_List[[\"Zone\"]],\n                                  mar = c(0, 0, 2, 0), oma = c(3.5, 3.5, 0, 0), cex = 1.8)\n\n\n\n\n#========================================================================\n##### MODEL OUTPUT PLOTS #####\n\n#Direction of \"geometric anisotropy\"\nSpatialDeltaGLMM::PlotAniso_Fn(FileName = paste0(DateFile,\"Aniso.png\"),\n                               Report = Report, TmbData = TmbData)\n\n#Density Surface for Each Year -- \"Dens\"\nSpatialDeltaGLMM::PlotResultsOnMap_Fn(plot_set = c(3),\n                                      MappingDetails = MapDetails_List[[\"MappingDetails\"]],\n                                      Report = Report, Sdreport = Opt$SD, PlotDF = MapDetails_List[[\"PlotDF\"]],\n                                      MapSizeRatio = MapDetails_List[[\"MapSizeRatio\"]],\n                                      Xlim = MapDetails_List[[\"Xlim\"]], Ylim = MapDetails_List[[\"Ylim\"]],\n                                      FileName = DateFile, Year_Set = Year_Set, Years2Include = Years2Include,\n                                      Rotate = MapDetails_List[[\"Rotate\"]], Cex = MapDetails_List[[\"Cex\"]],\n                                      Legend = MapDetails_List[[\"Legend\"]], zone = MapDetails_List[[\"Zone\"]],\n                                      mar = c(0, 0, 2, 0), oma = c(3.5, 3.5, 0, 0), cex = 1.8,\n                                      plot_legend_fig = TRUE)\n\n\n\n#Generate Index of Abundance\n\nIndex = SpatialDeltaGLMM::PlotIndex_Fn(DirName = DateFile,\n                                       TmbData = TmbData, Sdreport = Opt[[\"SD\"]],\n                                       Year_Set = Year_Set,\n                                       Years2Include = Years2Include, \n                                       use_biascorr = TRUE)\n\nidx <- Index$Table\n\n\n#Plotting \nx.lim <- c(min(yrs.surv), max(yrs.surv))\nup.sd <- idx$Estimate_metric_tons + idx$SD_mt\nlow.sd <- idx$Estimate_metric_tons - idx$SD_mt\ny.lim <- c(min(low.sd), max(up.sd))\n\nloc.yrs <- which(idx$Year %in% yrs.surv)\n\n  \nplot(x=NULL, y=NULL, xlim=x.lim, ylim=y.lim, ylab='Survey Estimate (metric Tons)', xlab='Year',\n       main='Gulf of Alaska\\nNorthern Rockfish Survey Index')\n\npolygon(x=c(yrs.surv, rev(yrs.surv)), y=c(low.sd[loc.yrs],rev(up.sd[loc.yrs])), col='lightgray', border=FALSE)\nlines(x=yrs.surv, y=idx$Estimate_metric_tons[loc.yrs], col='red')\npoints(x=yrs.surv, y=idx$Estimate_metric_tons[loc.yrs], pch=21, bg='red')\ngrid(col='black')\n\n\n#Center of gravity and range expansion/contraction\n#  For some reason I can't actually change the years to plot \nSpatialDeltaGLMM::Plot_range_shifts(Report = Report,\n                                    TmbData = TmbData, Sdreport = Opt[[\"SD\"]], Znames = colnames(TmbData$Z_xm),\n                                    PlotDir = DateFile, Year_Set = Year_Set)\n\n\n\n\n\n\n\n\n",
    "created" : 1490829552179.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3017739225",
    "id" : "86BB2CE",
    "lastKnownWriteTime" : 1490829867,
    "last_content_update" : 1490829867386,
    "path" : "~/Projects/Rockfish Assessment/VAST/VAST Model Northern Rockfish.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}